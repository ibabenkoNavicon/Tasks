//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------


namespace Auto.Common.Entitis
{
	
	/// <summary>
	/// 
	/// </summary>
	[System.Runtime.Serialization.DataContractAttribute()]
	[Microsoft.Xrm.Sdk.Client.EntityLogicalNameAttribute("nav_nav_auto_nav_credit")]
	public partial class nav_nav_auto_nav_credit : Microsoft.Xrm.Sdk.Entity, System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	{
		
		public static class Fields
		{
			public const string nav_autoid = "nav_autoid";
			public const string nav_creditid = "nav_creditid";
			public const string nav_nav_auto_nav_creditId = "nav_nav_auto_nav_creditid";
			public const string Id = "nav_nav_auto_nav_creditid";
			public const string VersionNumber = "versionnumber";
		}
		
		public static class Relationships
		{
			public const string nav_nav_auto_nav_credit1 = "nav_nav_auto_nav_credit";
		}
		
		/// <summary>
		/// Default Constructor.
		/// </summary>
		public nav_nav_auto_nav_credit() : 
				base(EntityLogicalName)
		{
		}
		
		public const string EntityLogicalName = "nav_nav_auto_nav_credit";
		
		public const string EntitySchemaName = "nav_nav_auto_nav_credit";
		
		public const string PrimaryIdAttribute = "nav_nav_auto_nav_creditid";
		
		public const string EntityLogicalCollectionName = null;
		
		public const string EntitySetName = "nav_nav_auto_nav_creditset";
		
		public const int EntityTypeCode = 10414;
		
		public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
		
		public event System.ComponentModel.PropertyChangingEventHandler PropertyChanging;
		
		private void OnPropertyChanged(string propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void OnPropertyChanging(string propertyName)
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, new System.ComponentModel.PropertyChangingEventArgs(propertyName));
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nav_autoid")]
		public System.Nullable<System.Guid> nav_autoid
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("nav_autoid");
			}
			set
			{
				this.OnPropertyChanging("nav_autoid");
				this.SetAttributeValue("nav_autoid", value);
				this.OnPropertyChanged("nav_autoid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nav_creditid")]
		public System.Nullable<System.Guid> nav_creditid
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("nav_creditid");
			}
			set
			{
				this.OnPropertyChanging("nav_creditid");
				this.SetAttributeValue("nav_creditid", value);
				this.OnPropertyChanged("nav_creditid");
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nav_nav_auto_nav_creditid")]
		public System.Nullable<System.Guid> nav_nav_auto_nav_creditId
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<System.Guid>>("nav_nav_auto_nav_creditid");
			}
			set
			{
				this.OnPropertyChanging("nav_nav_auto_nav_creditId");
				this.SetAttributeValue("nav_nav_auto_nav_creditid", value);
				if (value.HasValue)
				{
					base.Id = value.Value;
				}
				else
				{
					base.Id = System.Guid.Empty;
				}
				this.OnPropertyChanged("nav_nav_auto_nav_creditId");
			}
		}
		
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("nav_nav_auto_nav_creditid")]
		public override System.Guid Id
		{
			get
			{
				return base.Id;
			}
			set
			{
				this.nav_nav_auto_nav_creditId = value;
			}
		}
		
		/// <summary>
		/// 
		/// </summary>
		[Microsoft.Xrm.Sdk.AttributeLogicalNameAttribute("versionnumber")]
		public System.Nullable<long> VersionNumber
		{
			get
			{
				return this.GetAttributeValue<System.Nullable<long>>("versionnumber");
			}
			set
			{
				this.OnPropertyChanging("VersionNumber");
				this.SetAttributeValue("versionnumber", value);
				this.OnPropertyChanged("VersionNumber");
			}
		}
		
		/// <summary>
		/// N:N nav_nav_auto_nav_credit
		/// </summary>
		[Microsoft.Xrm.Sdk.RelationshipSchemaNameAttribute("nav_nav_auto_nav_credit")]
		public System.Collections.Generic.IEnumerable<Auto.Common.Entitis.nav_auto> nav_nav_auto_nav_credit1
		{
			get
			{
				return this.GetRelatedEntities<Auto.Common.Entitis.nav_auto>("nav_nav_auto_nav_credit", null);
			}
			set
			{
				this.OnPropertyChanging("nav_nav_auto_nav_credit1");
				this.SetRelatedEntities<Auto.Common.Entitis.nav_auto>("nav_nav_auto_nav_credit", null, value);
				this.OnPropertyChanged("nav_nav_auto_nav_credit1");
			}
		}
		
		/// <summary>
		/// Constructor for populating via LINQ queries given a LINQ anonymous type
		/// <param name="anonymousType">LINQ anonymous type.</param>
		/// </summary>
		public nav_nav_auto_nav_credit(object anonymousType) : 
				this()
		{
            foreach (var p in anonymousType.GetType().GetProperties())
            {
                var value = p.GetValue(anonymousType, null);
                var name = p.Name.ToLower();
            
                if (name.EndsWith("enum") && value.GetType().BaseType == typeof(System.Enum))
                {
                    value = new Microsoft.Xrm.Sdk.OptionSetValue((int) value);
                    name = name.Remove(name.Length - "enum".Length);
                }
            
                switch (name)
                {
                    case "id":
                        base.Id = (System.Guid)value;
                        Attributes["nav_nav_auto_nav_creditid"] = base.Id;
                        break;
                    case "nav_nav_auto_nav_creditid":
                        var id = (System.Nullable<System.Guid>) value;
                        if(id == null){ continue; }
                        base.Id = id.Value;
                        Attributes[name] = base.Id;
                        break;
                    case "formattedvalues":
                        // Add Support for FormattedValues
                        FormattedValues.AddRange((Microsoft.Xrm.Sdk.FormattedValueCollection)value);
                        break;
                    default:
                        Attributes[name] = value;
                        break;
                }
            }
		}
	}
}